# Add scripts to path

path_prepend "$HOME/.dotfiles_local/bin"

# Update local dotfiles
ldfu() {
    declare -f dfu > /dev/null && dfu &&
    (
        cd ~/.dotfiles_local && git pull --ff-only && ./install -q
    )
}

# Aliases
alias gpgst='gpg2 -k --list-options show-uid-validity'
alias gpgsgn='gpg2 --ask-cert-level --edit-key'
alias open-emacs='open -a /Applications/Emacs.app'
alias e='open-emacs'
alias emacs='/opt/homebrew/Cellar/emacs-plus@28/28.2/Emacs.app/Contents/MacOS/Emacs -nw'

# Make a 4GB (2048 * 4096M) RAM Disk
ramdisk() {
    local size
    if [[ -z "${1}" ]]; then
        size=4
    else
        size="${1}"
    fi
    if ! [[ ${size} =~ ^[0-9]+$ && $((${size} > 0)) == "1" && $((${size} <= 12)) == "1" ]]; then
        echo 'Size must be an integer parameter between 1 and 12'
        return 1
    fi
    diskutil erasevolume HFS+ 'RAM Disk' $(hdiutil attach -nomount ram://$((${size} * 2097152)))
}

# Push and jump
pj() {
    pushd "$(autojump $@)"
}

# Homebrew and Related Tools
export HOMEBREW_NO_ANALYTICS=1
export HOMEBREW_AUTO_UPDATE_SECS=86400
[[ -s `brew --prefix`/etc/autojump.sh ]] && . `brew --prefix`/etc/autojump.sh
export PKG_CONFIG_PATH="$BREW_PREFIX/opt/libffi/lib/pkgconfig"
export LIBRARY_PATH="$BREW_PREFIX/lib"

export JUPYTER_PATH="$HOME/.local/share/jupyter"


# OPAM configuration
test -r ~/.opam/opam-init/init.zsh && . ~/.opam/opam-init/init.zsh > /dev/null 2> /dev/null || true

# Everest / FStar
export EVEREST_DIR="$HOME/Documents/Anish/src/notary/everest"
path_prepend "$EVEREST_DIR/FStar/bin"
path_prepend "$EVEREST_DIR/karamel"
path_prepend "$EVEREST_DIR/z3-4.8.5-x64-osx-10.14.2/bin"
export FSTAR_HOME="$EVEREST_DIR/FStar"
export OPENSSL_HOME="$EVEREST_DIR/MLCrypto/openssl"
export KRML_HOME="$EVEREST_DIR/karamel"
export VALE_HOME="$EVEREST_DIR/vale"
export HACL_HOME="$EVEREST_DIR/hacl-star"
export MLCRYPTO_HOME="$EVEREST_DIR/MLCrypto"

# Go

export GOPATH="$HOME/go"
path_prepend "$GOPATH/bin"

# Spark

export PYSPARK_DRIVER_PYTHON="jupyter"
export PYSPARK_DRIVER_PYTHON_OPTS="notebook"

# OpenStack

export OS_CLOUD='default'

# GPG Key

GPGKEY="0x72EE4824FA6EFF1FE750A015C3F6E4F5086B3B32"
